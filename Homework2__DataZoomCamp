import io
import pandas as pd
import requests
if 'data_loader' not in globals():
    from mage_ai.data_preparation.decorators import data_loader
if 'test' not in globals():
    from mage_ai.data_preparation.decorators import test


# Define common data types and date parsing
taxi_dtypes = {
    'VendorID': pd.Int64Dtype(),
    'passenger_count': pd.Int64Dtype(),
    'trip_distance': float,
    'RatecodeID': pd.Int64Dtype(),
    'store_and_fwd_flag': str,
    'PULocationID': pd.Int64Dtype(),
    'DOLocationID': pd.Int64Dtype(),
    'payment_type': pd.Int64Dtype(),
    'fare_amount': float,
    'extra': float,
    'mta_tax': float,
    'tip_amount': float,
    'tolls_amount': float,
    'improvement_surcharge': float,
    'total_amount': float,
    'congestion_surcharge': float
}

parse_dates = ['lpep_pickup_datetime', 'lpep_dropoff_datetime']

# Data Loader for the final quarter of 2020
@data_loader
def load_data_for_final_quarter(*args, **kwargs):
    base_url = 'https://github.com/DataTalksClub/nyc-tlc-data/releases/download/green/green_tripdata_2020-{}.csv.gz'
    urls = [base_url.format(month) for month in range(10, 13)]

    # Load data for each month and concatenate using a for loop
    dataframes = [pd.read_csv(url, sep=",", compression="gzip", dtype=taxi_dtypes, parse_dates=parse_dates) for url in urls]
    final_data = pd.concat(dataframes, ignore_index=True)

    return final_data

# Test for the data loader
@test
def test_final_quarter_data(output, *args) -> None:
    """
    Test code for the final quarter data loader.
    """
    assert output is not None, 'The output is undefined'
    assert len(output) > 0, 'No data loaded for the final quarter of 2020'
